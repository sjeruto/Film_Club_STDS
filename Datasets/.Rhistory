str(trees)
attach(mpg)
data()
attach(mpg)
head(displ)
library(mpg)
import.packages("mpg")
library(mpg)
library(tidyverse)
data()
mpg
attach(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class)) +
scale_color_brewer(palette = "Set2") +
labs(title = "mpg Data")
str(mpg)
dim(mpg)
nrows(mpg)
nrow(mpg)
ncol(mpg)
length(mpg)
names(mpg)
correl(mpg)
#summary stats
summary(mpg)
#look at a sample of it
sample(mpg)
head(mpg)
tail(mpg)
#or for dataframes you can also find cols using
length(mpg$model)
cols(mpg)
col(mpg)
mpg[,0]
mpg[,1]
mpg[0,]
stat(mpg)
#look at a sample of it
sample(mpg)
#finding dimensions
dim(mpg)
library(hablar)
install.packages("hablar")
library(hablar)
head(table3)
table3 %>% separate(rate, c("cases", "population")) %>% convert(num(cases, population))
#load packages
library(tidyverse)
library(wbstats)
library(lubridate)
#import the tmdb files
file1 <- read.csv('tmdb clean 1-126118 range.csv')
file2 <- read.csv('tmdb clean 126119-199999 range.csv')
file3 <- read.csv('tmdb clean 200000-299999 range.csv')
setwd("~/GitHub/Film_Club_STDS/Datasets")
#load packages
library(tidyverse)
library(wbstats)
library(lubridate)
#import the tmdb files
file1 <- read.csv('tmdb clean 1-126118 range.csv')
file2 <- read.csv('tmdb clean 126119-199999 range.csv')
file3 <- read.csv('tmdb clean 200000-299999 range.csv')
file4 <- read.csv('tmdb clean 300000-371114 range.csv')
file5 <- read.csv('tmdb clean 371114-399999 range.csv')
file6 <- read.csv('tmdb clean 400000-499999 range.csv')
#merge files
combined <- rbind2(file1, file2)
combined <- rbind2(combined, file3)
combined <- rbind2(combined, file4)
combined <- rbind2(combined, file5)
combined <- rbind2(combined, file6)
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
#import culture questions
file7 <- read.csv('GENDER_EQUALITY.csv')
file8 <- read.csv('HOMOSEXUALITY.csv')
file9 <- read.csv('RELIGION_IMPORT.csv')
#create dummy variable for year of release
combined$release_date <- lubridate::dmy(combined$release_date)
combined$release_date[combined$release_date == ""] <- NA
combined$year <- year(combined$release_date)
#filter for last 10 years
tenyears <- combined %>%
filter(year > 2010)
#select relevant data
tmdb <- tenyears %>%
select(production_countries.name
,original_language
,budget
,genres.name
,adult)
#load packages
library(tidyverse)
library(gtools)
library(lubridate)
#import the files
file1 <- read.csv('tmdb clean 1-126118 range.csv')
file2 <- read.csv('tmdb clean 126119-199999 range.csv')
file3 <- read.csv('tmdb clean 200000-299999 range.csv')
file4 <- read.csv('tmdb clean 300000-371114 range.csv')
file5 <- read.csv('tmdb clean 371114-399999 range.csv')
file6 <- read.csv('tmdb clean 400000-499999 range.csv')
combined <- rbind2(combined, file3)
combined <- rbind2(combined, file4)
#merge files
combined <- rbind2(file1, file2)
combined <- rbind2(combined, file5)
combined <- rbind2(combined, file6)
## country ratio
country <- combined %>%
select(production_countries.name, genres.name, original_title) %>%
group_by(production_countries.name, genres.name) %>%
summarise(n = n())
## country ratio
combined$release_date <- lubridate::dmy(combined$release_date)
combined$release_date[combined$release_date == ""] <- NA
combined$year <- year(combined$release_date)
country <- combined %>%
filter(year > 2010)
country <- country %>%
select(production_countries.name, genres.name, original_title) %>%
group_by(production_countries.name, genres.name) %>%
summarise(n = n())
country_pivot <- pivot_wider(country
,id_cols = production_countries.name
,names_from = genres.name
,values_from = n)
country_pivot$total <- rowSums(country_pivot[,-1], na.rm=TRUE)
country_pivot <- pivot_longer(country_pivot,
cols = -c(production_countries.name|total),
names_to = "genre",
values_to = "value")
country_pivot$total[is.na(country_pivot$total)] <- 0
country_pivot$value[is.na(country_pivot$value)] <- 0
country_pivot <- country_pivot %>% filter(total > 50)
country_pivot$perc <- round((country_pivot$value /country_pivot$total * 100), 2)
country_pivot <- country_pivot %>%
select(production_countries.name, genre, perc)
country_pivot <- pivot_wider(country_pivot
,id_cols = production_countries.name
,names_from = genre
,values_from = perc)
View(country_pivot)
#select relevant data
tmdb <- tenyears %>%
select(production_countries.name
,original_language
,budget
,genres.name
,adult)
#drop NA values
tmdb <- na.omit(tmdb)
#pivot wider the survey responses
gender <- file7 %>%
select(country, GENDER_EQUALITY, weighted_n)
gender_pivot <- pivot_wider(gender
,id_cols = country
,names_from = GENDER_EQUALITY
,values_from = weighted_n)
names(gender_pivot) <- c("country", "gender_VI", "gender_SI", "gender_NTI", "gender_NIAA", "gender_DK", "gender_R")
#pivot wider the survey responses
lgbtqi <- file8 %>%
select(country, HOMOSEXUALITY, weighted_n)
lgbtqi_pivot <- pivot_wider(lgbtqi
,id_cols = country
,names_from = HOMOSEXUALITY
,values_from = weighted_n)
names(lgbtqi_pivot) <- c("country", "lgbtqi_Y", "lgbtqi_N", "lgbtqi_DK", "lgbtqi_R")
#pivot wider the survey responses
religion <- file9 %>%
select(country, RELIGION_IMPORT, weighted_n)
religion_pivot <- pivot_wider(religion
,id_cols = country
,names_from = RELIGION_IMPORT
,values_from = weighted_n)
names(religion_pivot) <- c("country", "religion_VI", "religion_SI", "religion_NTI", "religion_NIAA", "religion_DK", "religion_R")
View(lgbtqi_pivot)
#survey questions joined
survey_joined <- left_join(gender_pivot, lgbtqi_pivot, by= "country")
survey_joined <- left_join(survey_joined, religion_pivot, by= "country")
View(Country_Data)
#convert country names to match for join
survey_joined <- data.frame(lapply(survey_joined, function(x) {
gsub("United States", "United States of America", x)
}))
clean_country <- data.frame(lapply(Country_Data, function(x) {
gsub("United States", "United States of America", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Slovak Republic", "Slovakia", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Korea, Rep.", "South Korea", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Russian Federation", "Russia", x)
}))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, clean_country, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- inner_join(tmdbjoined, survey_joined, by= c("production_countries.name" = "country"))
View(tmdbjoined)
## country ratio
country <- tmdbjoined %>%
select(production_countries.name, genres.name, original_language) %>%
group_by(production_countries.name, genres.name) %>%
summarise(n = n())
View(country)
## country ratio
country <- tmdbjoined %>%
select(production_countries.name, original_language) %>%
group_by(production_countries.name) %>%
summarise(n = n())
## country ratio
country <- tmdbjoined %>%
select(production_countries.name, genres.name, original_language) %>%
group_by(production_countries.name, genres.name) %>%
summarise(n = n())
library(tidyverse)
#import the tmdb files
tmdbjoined <- read.csv('tmdbjoined.csv')
data <- tmdbjoined %>% select(
genres.name
,production_countries.name
,original_language
,income_level
,budget
,gender_VI
,gender_SI
,gender_NTI
,gender_NIAA
,gender_DK
,gender_R)
#convert adult to binary
levels(data$genres.name)
glm1 = glm(adult ~ production_countries.name + gender_VI, family = binomial(logit), data = data)
#import the tmdb files
tmdbjoined <- read.csv('tmdbjoined.csv')
data <- tmdbjoined %>% select(
genres.name
,production_countries.name
,original_language
,income_level
,budget
,gender_VI
,gender_SI
,gender_NTI
,gender_NIAA
,gender_DK
,gender_R)
#convert adult to binary
levels(data$genres.name)
glm1 = glm(genres.name ~ production_countries.name + gender_VI, family = binomial(logit), data = data)
#create a dummy variable
mature <- c("Action", "Crime", "Thriller", "Horror", "War")
#create a dummy variable
mature <- c("Action", "Crime", "Thriller", "Horror", "War")
tmdbdummy <- tmdbjoined %>%
mutate(dummy = ifelse(genres.name %in% mature, 1, 0))
View(tmdbdummy)
tmdbdummy$genres.name <- NULL
tmdbdummy$adult <- NULL
## write to csv
write.csv(tmdbdummy, "tmdbdummy.csv")
#import the tmdb files
tmdbjoined <- read.csv('tmdbdummy.csv')
#import the tmdb files
tmdbdummy <- read.csv('tmdbdummy.csv')
data <- tmdbdummy %>% select(
dummy
,production_countries.name
,original_language
,income_level
,budget
,gender_VI
,gender_SI
,gender_NTI
,gender_NIAA
,gender_DK
,gender_R)
glm1 = glm(dummy ~ production_countries.name + gender_VI, family = binomial(logit), data = data)
summary(glm1)
data <- tmdbdummy %>% select(
dummy
,original_language
,income_level
,budget
,gender_VI
,gender_SI
,gender_NTI
,gender_NIAA
,gender_DK
,gender_R)
names(tmdbdummy)
data <- tmdbdummy %>% select(
dummy
,production_countries.name
,original_language
,income_level
,budget
,gender_VI
,gender_SI
,gender_NTI
,gender_NIAA
,gender_DK
,gender_R
,lgbtqi_Y, lgbtqi_N, lgbtqi_DK, lgbtqi_R, religion_VI, religion_SI, religion_NTI, religion_NAA, religion_DK, religion_R)
data <- tmdbdummy %>% select(
dummy
,production_countries.name
,original_language
,income_level
,budget
,gender_VI
,gender_SI
,gender_NTI
,gender_NIAA
,gender_DK
,gender_R
,lgbtqi_Y, lgbtqi_N, lgbtqi_DK, lgbtqi_R, religion_VI, religion_SI, religion_NTI, religion_NIAA, religion_DK, religion_R)
glm1 = glm(dummy ~ ., family = binomial(logit), data = data)
summary(glm1)
glm1 = glm(dummy ~ . -production_countries.name -original_language, family = binomial(logit), data = data)
summary(glm1)
glm1 = glm(dummy ~ . -production_countries.name -original_language, family = binomial(logit), data = data, na.action = exclude)
glm1 = glm(dummy ~ . -production_countries.name -original_language, family = binomial(logit), data = data, na.action = na.exclude)
summary(glm1)
#combine "Don't Know" & "Refused" to answer for all culture questions
tmdbdummy$gender_Neut <- (gender_DK + gender_R)
#combine "Don't Know" & "Refused" to answer for all culture questions
tmdbdummy$gender_Neut <- (tmdbdummy$gender_DK + tmdbdummy$gender_R)
tmdbdummy$lgbtqi_Neut <- (tmdbdummy$lgbtqi_DK + tmdbdummy$lgbtqi_R)
tmdbdummy$religion_Neut <- (tmdbdummy$religion_DK + tmdbdummy$religion_R)
tmdbdummy$gender_DK <- NULL
tmdbdummy$gender_R <- NULL
tmdbdummy$lgbtqi_DK <- NULL
tmdbdummy$lgbtqi_R <- NULL
tmdbdummy$religion_DK <- NULL
tmdbdummy$religion_R <- NULL
## write to csv
write.csv(tmdbdummy, "tmdbdummy.csv")
#import the tmdb files
tmdbdummy <- read.csv('tmdbdummy.csv')
data <- tmdbdummy %>% select(
dummy
,production_countries.name
,original_language
,income_level
,budget
,gender_VI
,gender_SI
,gender_NTI
,gender_NIAA
,gender_Neut
,lgbtqi_Y, lgbtqi_N, lgbtqi_Neut, religion_VI, religion_SI, religion_NTI, religion_NIAA, religion_Neut)
glm1 = glm(dummy ~ . -production_countries.name -original_language, family = binomial(logit), data = data, na.action = na.exclude)
summary(glm1)
#combine "Don't Know" & "Refused" to answer for all culture questions
tmdbdummy$gender_Y <- (tmdbdummy$gender_VI + tmdbdummy$gender_SI)
tmdbdummy$religion_Y <- (tmdbdummy$religion_VI + tmdbdummy$religion_SI)
tmdbdummy$gender_VI <- NULL
tmdbdummy$gender_SI <- NULL
tmdbdummy$religion_VI <- NULL
tmdbdummy$religion_S <- NULL
#combine "Very Important" & "Somewhat Important" to answer for all culture questions
tmdbdummy$gender_N <- (tmdbdummy$gender_NTI + tmdbdummy$gender_NIAA)
tmdbdummy$religion_N <- (tmdbdummy$religion_NTI + tmdbdummy$religion_NIAA)
tmdbdummy$gender_NTI <- NULL
tmdbdummy$gender_NIAA <- NULL
tmdbdummy$religion_NTI <- NULL
tmdbdummy$religion_NIAA <- NULL
## write to csv
write.csv(tmdbdummy, "tmdbdummy.csv")
tmdbdummy$religion_SI <- NULL
#import the tmdb files
tmdbdummy <- read.csv('tmdbdummy.csv')
data <- tmdbdummy %>% select(
dummy
,production_countries.name
,original_language
,income_level
,budget
,gender_Y
,gender_N
,gender_Neut
,lgbtqi_Y
, lgbtqi_N
, lgbtqi_Neut
, religion_Y
, religion_N
, religion_Neut)
glm1 = glm(dummy ~ . -production_countries.name -original_language, family = binomial(logit), data = data, na.action = na.exclude)
summary(glm1)
data <- tmdbdummy %>% select(
dummy
,production_countries.name
,original_language
,income_level
,budget
,gender_Y
,gender_N
,gender_Neut
,lgbtqi_Y
,lgbtqi_N
,lgbtqi_Neut
,religion_Y
,religion_N
,religion_Neut)
glm1 = glm(dummy ~ . -original_language, family = binomial(logit), data = data, na.action = na.exclude)
summary(glm1)
data <- tmdbdummy %>% select(
dummy
,production_countries.name
,original_language
,income_level
,budget
,gender_Y
,gender_N
,gender_Neut
,lgbtqi_Y
,lgbtqi_N
,lgbtqi_Neut
,religion_Y
,religion_N
,religion_Neut)
glm1 = glm(dummy ~ . -production_countries.name -original_language, family = binomial(logit), data = data, na.action = na.exclude)
summary(glm1)
data <- tmdbdummy %>% select(
dummy
,production_countries.name
,original_language
,income_level
,budget
,gender_Y
,gender_N
,gender_Neut)
glm1 = glm(dummy ~ . -original_language, family = binomial(logit), data = data, na.action = na.exclude)
summary(glm1)
data <- tmdbdummy %>% select(
dummy
,production_countries.name
,original_language
,income_level
,budget
,religion_Y
,religion_N
, religion_Neut)
glm1 = glm(dummy ~ .  -original_language, family = binomial(logit), data = data, na.action = na.exclude)
summary(glm1)
-production_countries.name
glm1 = glm(dummy ~ . -production_countries.name -original_language, family = binomial(logit), data = data, na.action = na.exclude)
summary(glm1)
data <- tmdbdummy %>% select(
dummy
,production_countries.name
,original_language
,income_level
,budget
,gender_Y
,gender_N
,gender_Neut
,lgbtqi_Y
,lgbtqi_N
,lgbtqi_Neut
,religion_Y
,religion_N
,religion_Neut)
corrplot(data, method = "color")
corrplot(data)
library(corrplot)
corrplot(data, method = "color")
corrplot(data, method = "number")
corrplot(data)
View(data)
data <- na.omit(data)
corrplot(data)
data <- tmdbdummy %>% select(
dummy
,production_countries.name
,original_language
,income_level
,budget
,gender_Y
,gender_N
,gender_Neut
,lgbtqi_Y
,lgbtqi_N
,lgbtqi_Neut
,religion_Y
,religion_N
,religion_Neut)
data[is.na(data)] = 0
corrplot(data)
data <- tmdbdummy %>% select(
dummy
,production_countries.name
,original_language
,income_level
,budget
,gender_Y
,gender_N
,gender_Neut
,lgbtqi_Y
,lgbtqi_N
,lgbtqi_Neut
,religion_Y
,religion_N
,religion_Neut)
