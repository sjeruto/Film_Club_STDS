,budget
,genres.name
,adult)
#drop NA values
tmdb <- na.omit(tmdb)
#pivot wider the survey responses
gender <- file7 %>%
select(country, GENDER_EQUALITY, weighted_n)
gender_pivot <- pivot_wider(gender
,id_cols = country
,names_from = GENDER_EQUALITY
,values_from = weighted_n)
names(gender_pivot) <- c("country", "gender_VI", "gender_SI", "gender_NTI", "gender_NIAA", "gender_DK", "gender_R")
#pivot wider the survey responses
lgbtqi <- file8 %>%
select(country, HOMOSEXUALITY, weighted_n)
lgbtqi_pivot <- pivot_wider(lgbtqi
,id_cols = country
,names_from = HOMOSEXUALITY
,values_from = weighted_n)
names(lgbtqi_pivot) <- c("country", "lgbtqi_Y", "lgbtqi_N", "lgbtqi_DK", "lgbtqi_R")
#pivot wider the survey responses
religion <- file9 %>%
select(country, RELIGION_IMPORT, weighted_n)
religion_pivot <- pivot_wider(religion
,id_cols = country
,names_from = RELIGION_IMPORT
,values_from = weighted_n)
names(religion_pivot) <- c("country", "religion_VI", "religion_SI", "religion_NTI", "religion_NIAA", "religion_DK", "religion_R")
#survey questions joined
survey_joined <- left_join(gender_pivot, lgbtqi_pivot, by= "country")
survey_joined <- left_join(survey_joined, religion_pivot, by= "country")
#convert country names to match for join
survey_joined$country <- str_replace(survey_joined$country, "United States", "United States of America")
clean_country <- data.frame(lapply(Country_Data, function(x) {
gsub("United States", "United States of America", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Slovak Republic", "Slovakia", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Korea, Rep.", "South Korea", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Russian Federation", "Russia", x)
}))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, clean_country, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- inner_join(tmdbjoined, survey_joined, by= c("production_countries.name" = "country"))
## write to csv
write.csv(tmdbjoined, "tmdbjoined.csv")
#create a dummy variable for
mature <- c("Action", "Crime", "Thriller", "Horror", "War")
tmdbdummy <- tmdbjoined %>%
mutate(mature = ifelse(genres.name %in% mature, 1, 0))
tmdbdummy$genres.name <- NULL
tmdbdummy$adult <- NULL
#combine "Don't Know" & "Refused" to answer for all culture questions
tmdbdummy$gender_Neut <- (tmdbdummy$gender_DK + tmdbdummy$gender_R)
tmdbdummy$lgbtqi_Neut <- (tmdbdummy$lgbtqi_DK + tmdbdummy$lgbtqi_R)
tmdbdummy$religion_Neut <- (tmdbdummy$religion_DK + tmdbdummy$religion_R)
tmdbdummy$gender_DK <- NULL
tmdbdummy$gender_R <- NULL
tmdbdummy$lgbtqi_DK <- NULL
tmdbdummy$lgbtqi_R <- NULL
tmdbdummy$religion_DK <- NULL
tmdbdummy$religion_R <- NULL
#combine "Very Important" & "Somewhat Important" to answer for all culture questions
tmdbdummy$gender_Y <- (tmdbdummy$gender_VI + tmdbdummy$gender_SI)
tmdbdummy$religion_Y <- (tmdbdummy$religion_VI + tmdbdummy$religion_SI)
tmdbdummy$gender_VI <- NULL
tmdbdummy$gender_SI <- NULL
tmdbdummy$religion_VI <- NULL
tmdbdummy$religion_SI <- NULL
#combine "Very Important" & "Somewhat Important" to answer for all culture questions
tmdbdummy$gender_N <- (tmdbdummy$gender_NTI + tmdbdummy$gender_NIAA)
tmdbdummy$religion_N <- (tmdbdummy$religion_NTI + tmdbdummy$religion_NIAA)
tmdbdummy$gender_NTI <- NULL
tmdbdummy$gender_NIAA <- NULL
tmdbdummy$religion_NTI <- NULL
tmdbdummy$religion_NIAA <- NULL
## write to csv
write.csv(tmdbdummy, "tmdbdummy.csv")
write.csv(combined, "combined.csv")
#import
combined <- read.csv('combined.csv')
tmdbdummy <- read.csv('tmdbdummy.csv')
#plot budget vs vote_avg.
ggplot(combined, aes(vote_average, budget, colour = genres.name)) +
geom_point() +
ggtitle("budget vs average vote")
#country by mature vs not
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature))
#country by mature vs not
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature))+
geom_bar(stat = "identity")
#country by mature vs not
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position="none") +
#country by mature vs not
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position="none")
#country by mature vs not
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature))+
geom_bar(stat = "identity")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position="none")
#country by mature vs not
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position="none")
#country by mature vs not
tmdbdummy$matrue <- as.factor(tmdbdummy$mature)
#country by mature vs not
tmdbdummy$matrue <- NULL
#country by mature vs not
tmdbdummy$mature <- as.factor(tmdbdummy$mature)
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position="none")
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90), legend.position="none")
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
scale_y_continuous(labels = scales::percent)
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+
scale_y_discrete(labels = scales::percent)
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#country by mature vs not
tmdbmature <-
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
# Transform this data in %
data_percentage <- apply(tmdbdummy, 2, function(x){x*100/sum(x,na.rm=T)})
ggplot(tmdbdummy, aes(x=production_countries.name, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplot(tmdbdummy, aes(x=production_countries.name, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
tmdbdummy <- read.csv('tmdbdummy.csv')
pairs(tmdbdummy)
# Explore structure of csv file
str(tmdbdummy)
glimpse(tmdbdummy)
summary(tmdbdummy)
skim(tmdbdummy) #numerical attributes from summary
library(skimr)
skim(tmdbdummy) #numerical attributes from summary
dfSummary(tmdbdummy, graph.magnif = 0.75, valid.col = FALSE, style = "grid") # need to re-configure
library(summarytools)
dfSummary(tmdbdummy, graph.magnif = 0.75, valid.col = FALSE, style = "grid") # need to re-configure
describe(tmdbdummy)
library(corrplot)
library(Hmisc) # describe()
library(funModeling) # profiling_num()
library(dlookr) # plot_normality(), normality()
library(DataExplorer) # plot_str()
library(plotly) # ggplotly(), plot_ly()
library(dummies) # creating dummy variables
dfSummary(tmdbdummy, graph.magnif = 0.75, valid.col = FALSE, style = "grid") # need to re-configure
describe(tmdbdummy)
normality(tmdbdummy)
profiling_num(tmdbdummy)
nrow(tmdbdummy)
table(tmdbdummy$mature)
table(tmdbdummy$lgbtqi_Y)
plot_str(tmdbdummy)
plot_missing(tmdbdummy) # checks for NA data or missing values
plot_histogram(tmdbdummy) # though the histogram shows no "missing data", the dataframe contains Nulls
tmdbdummy$X <- NULL
plot_normality(credfile)
plot_normality(tmdbdummy)
plot_histogram(tmdbdummy)
plot_normality(tmdbdummy)
# Explore structure of csv file
str(tmdbdummy)
glimpse(tmdbdummy)
summary(tmdbdummy)
skim(tmdbdummy) #numerical attributes from summary
dfSummary(tmdbdummy, graph.magnif = 0.75, valid.col = FALSE, style = "grid") # need to re-configure
describe(tmdbdummy)
normality(tmdbdummy)
profiling_num(tmdbdummy)
nrow(tmdbdummy)
table(tmdbdummy$mature)
#plot budget vs vote_avg.
ggplot(combined, aes(vote_average, budget, colour = genres.name)) +
geom_point() +
ggtitle("budget vs average vote")
#plot budget vs revenue
ggplot(combined, aes(revenue, budget, colour = genres.name)) +
geom_point()+
ggtitle("budget vs revenue")
plot_missing(tmdbdummy) # checks for NA data or missing values
plot_normality(tmdbdummy)
View(tmdbdummy)
#mature vs. lgbtqi
ggplot(tmdbdummy, aes(mature, lgbtqi_Y)) +
geom_point()+
ggtitle("budget vs revenue")
#mature vs. lgbtqi
ggplot(tmdbdummy, aes(lgbtqi_Y, gender_Y)) +
geom_point()+
ggtitle("Progressive across lgbtqi & gender")
ggplot(tmdbdummy, aes(lgbtqi_Y, religion_Y)) +
geom_point()+
ggtitle("Progressive across lgbtqi & gender")
ggplot(tmdbdummy, aes(gender_Y, religion_Y)) +
geom_point()+
ggtitle("Progressive across gender & religion")
ggplot(tmdbdummy, aes(gender_Y, religion_Y)) +
geom_point()+
ggtitle("Progressive across gender & religion")+
abline()
ggplot(tmdbdummy, aes(gender_Y, religion_Y)) +
geom_point()+
ggtitle("Progressive across gender & religion")+
geom_smooth(method="lm")
ggplot(tmdbdummy, aes(lgbtqi_Y, religion_Y)) +
geom_point()+
ggtitle("Progressive across lgbtqi & religion") +
geom_smooth(method="lm")
#mature vs. lgbtqi
ggplot(tmdbdummy, aes(lgbtqi_Y, gender_Y)) +
geom_point()+
ggtitle("Progressive across lgbtqi & gender") +
geom_smooth(method="lm")
require(likert)''
require(likert)
import.packages("likert")
install.packages("likert")
#plot heatmap of country genre popularity
ggplot(country_perc, aes(production_countries.name, genre, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position="none") +
ggtitle("Country genre popularity") +
scale_fill_gradient(low="white", high="blue")
View(lgbtqi_pivot)
View(religion_pivot)
data(pisaitems)
#import the tmdb files
file1 <- read.csv('tmdb clean 1-126118 range.csv')
file2 <- read.csv('tmdb clean 126119-199999 range.csv')
file3 <- read.csv('tmdb clean 200000-299999 range.csv')
file4 <- read.csv('tmdb clean 300000-371114 range.csv')
file5 <- read.csv('tmdb clean 371114-399999 range.csv')
file6 <- read.csv('tmdb clean 400000-499999 range.csv')
#merge files
combined <- rbind2(file1, file2)
combined <- rbind2(combined, file3)
combined <- rbind2(combined, file4)
combined <- rbind2(combined, file5)
combined <- rbind2(combined, file6)
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
file8 <- read.csv('HOMOSEXUALITY.csv')
file9 <- read.csv('RELIGION_IMPORT.csv')
combined$release_date[combined$release_date == ""] <- NA
#import culture questions
file7 <- read.csv('GENDER_EQUALITY.csv')
#create dummy variable for year of release
combined$release_date <- lubridate::dmy(combined$release_date)
combined$year <- year(combined$release_date)
#filter for last 10 years
tenyears <- combined %>%
filter(year > 2010)
#select relevant data
tmdb <- tenyears %>%
select(production_countries.name
,original_language
,budget
,genres.name
,adult)
#drop NA values
tmdb <- na.omit(tmdb)
#pivot wider the survey responses
gender <- file7 %>%
select(country, GENDER_EQUALITY, weighted_n)
gender_pivot <- pivot_wider(gender
,id_cols = country
,names_from = GENDER_EQUALITY
,values_from = weighted_n)
names(gender_pivot) <- c("country", "gender_VI", "gender_SI", "gender_NTI", "gender_NIAA", "gender_DK", "gender_R")
#pivot wider the survey responses
lgbtqi <- file8 %>%
select(country, HOMOSEXUALITY, weighted_n)
lgbtqi_pivot <- pivot_wider(lgbtqi
,id_cols = country
,names_from = HOMOSEXUALITY
,values_from = weighted_n)
names(lgbtqi_pivot) <- c("country", "lgbtqi_Y", "lgbtqi_N", "lgbtqi_DK", "lgbtqi_R")
#pivot wider the survey responses
religion <- file9 %>%
select(country, RELIGION_IMPORT, weighted_n)
religion_pivot <- pivot_wider(religion
,id_cols = country
,names_from = RELIGION_IMPORT
,values_from = weighted_n)
names(religion_pivot) <- c("country", "religion_VI", "religion_SI", "religion_NTI", "religion_NIAA", "religion_DK", "religion_R")
library(pisaitems)
data(pisaitems)
data("pisaitems")
require(likert)
data("pisaitems")
View(pisaitems)
View(religion)
View(religion)
l24g <- likert(religion_import, grouping=religion$country)
l24g <- likert(RELIGION_IMPORT, grouping=religion$country)
l24g <- likert(religion$RELIGION_IMPORT, grouping=religion$country)
l24g <- likert(religion$RELIGION_IMPORT[,1:2], grouping=religion$country)
l24g <- likert(religion$RELIGION_IMPORT[,1], grouping=religion$country)
l24g <- likert(religion$RELIGION_IMPORT[,1:1], grouping=religion$country)
l24g <- likert(religion$RELIGION_IMPORT[,1:2], grouping=religion$country)
l24g <- likert(religion[,1:2], grouping=religion$country)
#pivot wider the survey responses
religion <- file9 %>%
select(country, RELIGION_IMPORT, weighted_n)
religion_pivot <- pivot_wider(religion
,id_cols = country
,names_from = RELIGION_IMPORT
,values_from = weighted_n)
names(religion_pivot) <- c("country", "religion_VI", "religion_SI", "religion_NTI", "religion_NIAA", "religion_DK", "religion_R")
#survey questions joined
survey_joined <- left_join(gender_pivot, lgbtqi_pivot, by= "country")
survey_joined <- left_join(survey_joined, religion_pivot, by= "country")
#convert country names to match for join
survey_joined$country <- str_replace(survey_joined$country, "United States", "United States of America")
clean_country <- data.frame(lapply(Country_Data, function(x) {
gsub("United States", "United States of America", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Slovak Republic", "Slovakia", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Korea, Rep.", "South Korea", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Russian Federation", "Russia", x)
}))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, clean_country, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- inner_join(tmdbjoined, survey_joined, by= c("production_countries.name" = "country"))
## write to csv
write.csv(tmdbjoined, "tmdbjoined.csv")
#create a dummy variable for
mature <- c("Action", "Crime", "Thriller", "Horror", "War")
tmdbdummy <- tmdbjoined %>%
mutate(mature = ifelse(genres.name %in% mature, 1, 0))
tmdbdummy$genres.name <- NULL
tmdbdummy$adult <- NULL
#combine "Don't Know" & "Refused" to answer for all culture questions
tmdbdummy$gender_Neut <- (tmdbdummy$gender_DK + tmdbdummy$gender_R)
tmdbdummy$lgbtqi_Neut <- (tmdbdummy$lgbtqi_DK + tmdbdummy$lgbtqi_R)
tmdbdummy$religion_Neut <- (tmdbdummy$religion_DK + tmdbdummy$religion_R)
tmdbdummy$gender_DK <- NULL
tmdbdummy$gender_R <- NULL
tmdbdummy$lgbtqi_DK <- NULL
tmdbdummy$lgbtqi_R <- NULL
tmdbdummy$religion_DK <- NULL
tmdbdummy$religion_R <- NULL
#combine "Very Important" & "Somewhat Important" to answer for all culture questions
tmdbdummy$gender_Y <- (tmdbdummy$gender_VI + tmdbdummy$gender_SI)
tmdbdummy$religion_Y <- (tmdbdummy$religion_VI + tmdbdummy$religion_SI)
tmdbdummy$gender_VI <- NULL
tmdbdummy$gender_SI <- NULL
tmdbdummy$religion_VI <- NULL
tmdbdummy$religion_SI <- NULL
#combine "Very Important" & "Somewhat Important" to answer for all culture questions
tmdbdummy$gender_N <- (tmdbdummy$gender_NTI + tmdbdummy$gender_NIAA)
tmdbdummy$religion_N <- (tmdbdummy$religion_NTI + tmdbdummy$religion_NIAA)
tmdbdummy$gender_NTI <- NULL
tmdbdummy$gender_NIAA <- NULL
tmdbdummy$religion_NTI <- NULL
tmdbdummy$religion_NIAA <- NULL
View(file7)
library(tidyverse)
library(skimr)
library(summarytools)
library(corrplot)
library(Hmisc)        # describe()
library(funModeling)  # profiling_num()
library(dlookr)       # plot_normality(), normality()
library(DataExplorer) # plot_str()
library(plotly)       # ggplotly(), plot_ly()
library(dummies)      # creating dummy variables
library(likert)
#import
combined <- read.csv('combined.csv')
tmdbdummy <- read.csv('tmdbdummy.csv')
tmdbdummy$X <- NULL
View(tmdbdummy)
# Explore structure of csv file
str(tmdbdummy)
glimpse(tmdbdummy)
summary(tmdbdummy)
skim(tmdbdummy) #numerical attributes from summary
dfSummary(tmdbdummy, graph.magnif = 0.75, valid.col = FALSE, style = "grid") # need to re-configure
dfSummary(tmdbdummy, graph.magnif = 0.75, valid.col = FALSE, style = "grid") # need to re-configure
describe(tmdbdummy)
normality(tmdbdummy)
profiling_num(tmdbdummy)
nrow(tmdbdummy)
table(tmdbdummy$mature)
View(survey_joined)
View(survey_joined)
View(file7)
#plot budget vs vote_avg.
ggplot(combined, aes(vote_average, budget, colour = genres.name)) +
geom_point() +
ggtitle("budget vs average vote")
View(pisaitems)
View(lgbtqi)
#plot budget vs vote_avg.
ggplot(combined, aes(vote_average, budget, colour = income_level)) +
geom_point() +
ggtitle("budget vs average vote")
#plot budget vs vote_avg.
ggplot(combined, aes(vote_average, budget, colour = genres.name)) +
geom_point() +
ggtitle("budget vs average vote")
#plot budget vs vote_avg.
ggplot(combined, aes(budget, vote_average, colour = genres.name)) +
geom_point() +
ggtitle("budget vs average vote")
#plot budget vs revenue
ggplot(combined, aes(revenue, budget, colour = genres.name)) +
geom_point()+
ggtitle("budget vs revenue")
#all genres separately
for (var in unique(combined$genres.name)) {
dev.new()
print( ggplot(combined[combined$genres.name==var,], aes(budget, revenue))
+ geom_point()
+ ggtitle(var))
}
#country by mature vs not
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#country by mature vs not
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
tmdbdummy$mature <- as.factor(tmdbdummy$mature)
#country by mature vs not
ggplot(tmdbdummy, aes(x=production_countries.name, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#country by mature vs not
ggplot(tmdbdummy, aes(x=income_level, y=mature, fill=mature))+
geom_col(position="fill")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
plot_missing(tmdbdummy) # checks for NA data or missing values
#mature vs. lgbtqi
ggplot(tmdbdummy, aes(lgbtqi_Y, gender_Y)) +
geom_point()+
ggtitle("Progressive across lgbtqi & gender") +
geom_smooth(method="lm")
ggplot(tmdbdummy, aes(lgbtqi_Y, religion_Y)) +
geom_point()+
ggtitle("Progressive across lgbtqi & religion") +
geom_smooth(method="lm")
ggplot(tmdbdummy, aes(gender_Y, religion_Y)) +
geom_point()+
ggtitle("Progressive across gender & religion")+
geom_smooth(method="lm")
#mature vs. lgbtqi
ggplot(tmdbdummy, aes(lgbtqi_Y, gender_Y)) +
geom_point()+
ggtitle("Progressive across lgbtqi & gender") +
geom_smooth(method="lm")
View(file1)
View(tmdbdummy)
View(tmdbjoined)
View(tmdbdummy)
#mature vs. lgbtqi
ggplot(tmdbdummy, aes(lgbtqi_Y, gender_Y)) +
geom_point()+
ggtitle("Progressive across lgbtqi & gender")
ggplot(tmdbdummy, aes(lgbtqi_Y, religion_Y)) +
geom_point()+
ggtitle("Progressive across lgbtqi & religion")
ggplot(tmdbdummy, aes(gender_Y, religion_Y)) +
geom_point()+
ggtitle("Progressive across gender & religion")
#plot heatmap of country genre popularity
ggplot(country_perc, aes(production_countries.name, genre, fill=value)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1), legend.position="none") +
ggtitle("Country genre popularity") +
scale_fill_gradient(low="white", high="blue")
