file1 <- read.csv('~/R/STL-01.009.csv', header=T, skip=3)
file2 <- read.csv('~/R/STL-01.009 (1).csv', header=T, skip=3)
file1$fileNum <- 'file01'
file2$fileNum <- 'file02'
#combined all the files
combined <- file1
combined <- rbind2(combined, file2)
#drop event codes T0400 which relates to the batch settlements
combined <- combined %>%
filter(Transaction.Event.Code != "T0400")
#drop the FX trailers (i.e. CH: FF, RC, RF, SC, SF)
combined <- combined %>%
filter(!CH %in% c("FF", "RC", "RF", "SC", "SF"))
#covert NA to Zero
combined <- combined %>%
mutate(Fee.Amount = ifelse(is.na(Fee.Amount), 0, Fee.Amount)) %>%
mutate(Fee.Amount = ifelse(Fee.Amount == "", 0, Fee.Amount)) %>%
transform(Fee.Amount = as.numeric(Fee.Amount)) %>%
mutate(Gross.Transaction.Amount = ifelse(is.na(Gross.Transaction.Amount), 0, Gross.Transaction.Amount)) %>%
mutate(Gross.Transaction.Amount = ifelse(Gross.Transaction.Amount == "", 0, Gross.Transaction.Amount)) %>%
transform(Gross.Transaction.Amount = as.numeric(Gross.Transaction.Amount))
#covert amounts from cents to dollar values
combined <- combined %>%
mutate(Gross.Transaction.Amount = if_else(Transaction.Debit.or.Credit == "DR", (Gross.Transaction.Amount / 100 * -1) , Gross.Transaction.Amount / 100)) %>%
mutate(Fee.Amount = if_else(Fee.Debit.or.Credit == "DR", (Fee.Amount / 100 * - 1), Fee.Amount / 100))
#Create a daily settlement summary total to Rec to bank
bank_rec <- combined %>%
select(23, 10, 13)
bank_rec <- bank_rec %>%
mutate(Net = (as.numeric(Gross.Transaction.Amount) + as.numeric(Fee.Amount)))
bank_rec <- bank_rec %>%
select(1,4) %>%
group_by(fileNum) %>%
summarise_each(funs(sum))
write.csv(combined,'~/R/combined.csv', row.names = FALSE)
View(bank_rec)
data()
str(trees)
attach(mpg)
data()
attach(mpg)
head(displ)
library(mpg)
import.packages("mpg")
library(mpg)
library(tidyverse)
data()
mpg
attach(mpg)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, color = class)) +
scale_color_brewer(palette = "Set2") +
labs(title = "mpg Data")
str(mpg)
dim(mpg)
nrows(mpg)
nrow(mpg)
ncol(mpg)
length(mpg)
names(mpg)
correl(mpg)
#summary stats
summary(mpg)
#look at a sample of it
sample(mpg)
head(mpg)
tail(mpg)
#or for dataframes you can also find cols using
length(mpg$model)
cols(mpg)
col(mpg)
mpg[,0]
mpg[,1]
mpg[0,]
stat(mpg)
#look at a sample of it
sample(mpg)
#finding dimensions
dim(mpg)
library(hablar)
install.packages("hablar")
library(hablar)
head(table3)
table3 %>% separate(rate, c("cases", "population")) %>% convert(num(cases, population))
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
install.packages("wbstats")
library(wbstats)
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
library(tidyverse)
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
View(Country_Data)
Country_Data
#load packages
library(tidyverse)
setwd("~/GitHub/Film_Club_STDS/Datasets")
#load packages
library(tidyverse)
library(gtools)
library(lubridate)
#import the files
file1 <- read.csv('tmdb clean 1-126118 range.csv')
file2 <- read.csv('tmdb clean 126119-199999 range.csv')
file3 <- read.csv('tmdb clean 200000-299999 range.csv')
file4 <- read.csv('tmdb clean 300000-371114 range.csv')
file5 <- read.csv('tmdb clean 371114-399999 range.csv')
file6 <- read.csv('tmdb clean 400000-499999 range.csv')
#merge files
combined <- rbind2(file1, file2)
combined <- rbind2(combined, file3)
combined <- rbind2(combined, file4)
combined <- rbind2(combined, file5)
combined <- rbind2(combined, file6)
## country ratio
country <- combined %>%
select(production_countries.name, genres.name, original_title) %>%
group_by(production_countries.name, genres.name) %>%
summarise(n = n())
## country ratio
combined$release_date <- lubridate::dmy(combined$release_date)
combined$release_date[combined$release_date == ""] <- NA
combined$year <- year(combined$release_date)
country <- combined %>%
filter(year > 2010)
country <- country %>%
select(production_countries.name, genres.name, original_title) %>%
group_by(production_countries.name, genres.name) %>%
summarise(n = n())
country_pivot <- pivot_wider(country
,id_cols = production_countries.name
,names_from = genres.name
,values_from = n)
country_pivot$total <- rowSums(country_pivot[,-1], na.rm=TRUE)
country_pivot <- pivot_longer(country_pivot,
cols = -c(production_countries.name|total),
names_to = "genre",
values_to = "value")
country_pivot$total[is.na(country_pivot$total)] <- 0
country_pivot$value[is.na(country_pivot$value)] <- 0
country_pivot <- country_pivot %>% filter(total > 50)
country_pivot$perc <- round((country_pivot$value /country_pivot$total * 100), 2)
country_pivot <- country_pivot %>%
select(production_countries.name, genre, perc)
country_pivot <- pivot_wider(country_pivot
,id_cols = production_countries.name
,names_from = genre
,values_from = perc)
#import the tmdb files
file1 <- read.csv('tmdb clean 1-126118 range.csv')
file2 <- read.csv('tmdb clean 126119-199999 range.csv')
file3 <- read.csv('tmdb clean 200000-299999 range.csv')
file4 <- read.csv('tmdb clean 300000-371114 range.csv')
file5 <- read.csv('tmdb clean 371114-399999 range.csv')
file6 <- read.csv('tmdb clean 400000-499999 range.csv')
#merge files
combined <- rbind2(file1, file2)
combined <- rbind2(combined, file3)
combined <- rbind2(combined, file4)
combined <- rbind2(combined, file5)
combined <- rbind2(combined, file6)
library(wbstats)
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
View(Country_Data)
#group country totals
country <- combined %>%
select(production_countries.name, genres.name, original_title) %>%
group_by(production_countries.name, genres.name) %>%
summarise(n = n())
View(country)
library(lubridate)
#create dummy variable for year of release
combined$release_date <- lubridate::dmy(combined$release_date)
combined$release_date[combined$release_date == ""] <- NA
combined$year <- year(combined$release_date)
country <- combined %>%
filter(year > 2010)
View(country)
View(combined)
#import the tmdb files
file1 <- read.csv('tmdb clean 1-126118 range.csv')
file2 <- read.csv('tmdb clean 126119-199999 range.csv')
file3 <- read.csv('tmdb clean 200000-299999 range.csv')
file4 <- read.csv('tmdb clean 300000-371114 range.csv')
file5 <- read.csv('tmdb clean 371114-399999 range.csv')
file6 <- read.csv('tmdb clean 400000-499999 range.csv')
combined <- rbind2(combined, file3)
#merge files
combined <- rbind2(file1, file2)
combined <- rbind2(combined, file4)
combined <- rbind2(combined, file5)
combined <- rbind2(combined, file6)
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
combined$release_date[combined$release_date == ""] <- NA
#create dummy variable for year of release
combined$release_date <- lubridate::dmy(combined$release_date)
combined$year <- year(combined$release_date)
#filter for last 10 years
tenyears <- combined %>%
filter(year > 2010)
#select relevant data
tmdb <- tenyears %>%
select(production_countries.name, original_language, budget, genres.name)
View(country_pivot)
View(country)
View(tmdb)
#import the tmdb files
file1 <- read.csv('tmdb clean 1-126118 range.csv')
file2 <- read.csv('tmdb clean 126119-199999 range.csv')
file3 <- read.csv('tmdb clean 200000-299999 range.csv')
file4 <- read.csv('tmdb clean 300000-371114 range.csv')
file5 <- read.csv('tmdb clean 371114-399999 range.csv')
file6 <- read.csv('tmdb clean 400000-499999 range.csv')
#merge files
combined <- rbind2(file1, file2)
combined <- rbind2(combined, file3)
combined <- rbind2(combined, file4)
combined <- rbind2(combined, file5)
combined <- rbind2(combined, file6)
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
#create dummy variable for year of release
combined$release_date <- lubridate::dmy(combined$release_date)
combined$release_date[combined$release_date == ""] <- NA
combined$year <- year(combined$release_date)
#filter for last 10 years
tenyears <- combined %>%
filter(year > 2010)
#select relevant data
tmdb <- tenyears %>%
select(production_countries.name, original_language, budget, genres.name)
#drop NA values
tmdb[complete.cases(tmdb)]
#drop NA values
na.omit(tmdb)
#drop NA values
tmdb <- na.omit(tmdb)
View(Country_Data)
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, Country_Data, by= c("production_countries.name" = "country"))
View(tmdb)
View(tmdbjoined)
View(Country_Data)
#convert countries to useable
gsub("United States", "United States of America", Country_Data)
View(Country_Data)
#convert countries to useable
gsub("United States", "United States of America", Country_Data)
#convert countries to useable
Country_Data <- gsub("United States", "United States of America", Country_Data)
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
#convert countries to useable
clean_country <- data.frame(lapply(Country_Data, function(x) {
gsub("United States", "United States of America", x)
}))
View(clean_country)
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Slovak Replublic", "Slovakia", x)
}))
#select relevant data
tmdb <- tenyears %>%
select(production_countries.name, original_language, budget, genres.name)
#drop NA values
tmdb <- na.omit(tmdb)
#import culture questions
file7 <- read.csv('GENDER_EQUALITY.csv')
file8 <- read.csv('HOMOSEXUALITY.csv')
file9 <- read.csv('RELIGION IMPORT.csv')
file9 <- read.csv('RELIGION_IMPORT.csv')
View(file7)
View(file8)
#pivot wider the survey responses
gender <- file7 %>%
select(country, GENDER_EQUALITY, weighted_n)
gender_pivot <- pivot_wider(gender
,id_cols = country
,names_from = GENDER_EQUALITY
,values_from = n)
gender_pivot <- pivot_wider(gender
,id_cols = country
,names_from = GENDER_EQUALITY
,values_from = weighted_n)
View(gender_pivot)
View(file8)
#pivot wider the survey responses
lgbtqi <- file8 %>%
select(country, HOMOSEXUALITY, weighted_n)
lgbtqi_pivot <- pivot_wider(lgbtqi
,id_cols = country
,names_from = GENDER_EQUALITY
,values_from = weighted_n)
lgbtqi_pivot <- pivot_wider(lgbtqi
,id_cols = country
,names_from = HOMOSEXUALITY
,values_from = weighted_n)
View(lgbtqi_pivot)
View(file9)
religion_pivot <- pivot_wider(religion
,id_cols = country
,names_from = RELIGION_IMPORT
,values_from = weighted_n)
#pivot wider the survey responses
religion <- file9 %>%
select(country, RELIGION_IMPORT, weighted_n)
religion_pivot <- pivot_wider(religion
,id_cols = country
,names_from = RELIGION_IMPORT
,values_from = weighted_n)
View(religion_pivot)
#survey joined
survey_joined <- left_join(gender_pivot, lgbtqi_pivot, by= "country")
survey_joined <- left_join(survey_joined, religion_pivot, by= "country")
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, clean_country, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, survey_joined, by= c("production_countries.name" = "country"))
View(tmdbjoined)
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
file8 <- read.csv('HOMOSEXUALITY.csv')
file9 <- read.csv('RELIGION_IMPORT.csv')
#import culture questions
file7 <- read.csv('GENDER_EQUALITY.csv')
#create dummy variable for year of release
combined$release_date <- lubridate::dmy(combined$release_date)
combined$release_date[combined$release_date == ""] <- NA
combined$year <- year(combined$release_date)
#filter for last 10 years
tenyears <- combined %>%
filter(year > 2010)
#select relevant data
tmdb <- tenyears %>%
select(production_countries.name, original_language, budget, genres.name)
#drop NA values
tmdb <- na.omit(tmdb)
#pivot wider the survey responses
gender <- file7 %>%
select(country, GENDER_EQUALITY, weighted_n)
gender_pivot <- pivot_wider(gender
,id_cols = country
,names_from = GENDER_EQUALITY
,values_from = weighted_n)
#pivot wider the survey responses
lgbtqi <- file8 %>%
select(country, HOMOSEXUALITY, weighted_n)
lgbtqi_pivot <- pivot_wider(lgbtqi
,id_cols = country
,names_from = HOMOSEXUALITY
,values_from = weighted_n)
#pivot wider the survey responses
religion <- file9 %>%
select(country, RELIGION_IMPORT, weighted_n)
religion_pivot <- pivot_wider(religion
,id_cols = country
,names_from = RELIGION_IMPORT
,values_from = weighted_n)
#survey questions joined
survey_joined <- left_join(gender_pivot, lgbtqi_pivot, by= "country")
survey_joined <- left_join(survey_joined, religion_pivot, by= "country")
#convert country names to match for join
clean_country <- data.frame(lapply(survey_joined, function(x) {
gsub("United States", "United States of America", x)
}))
clean_country <- data.frame(lapply(Country_Data, function(x) {
gsub("United States", "United States of America", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Slovak Replublic", "Slovakia", x)
}))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, clean_country, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, survey_joined, by= c("production_countries.name" = "country"))
#create dummy variable for year of release
combined$release_date <- lubridate::dmy(combined$release_date)
combined$release_date[combined$release_date == ""] <- NA
combined$year <- year(combined$release_date)
#filter for last 10 years
tenyears <- combined %>%
filter(year > 2010)
#select relevant data
tmdb <- tenyears %>%
select(production_countries.name, original_language, budget, genres.name)
#drop NA values
tmdb <- na.omit(tmdb)
#pivot wider the survey responses
gender <- file7 %>%
select(country, GENDER_EQUALITY, weighted_n)
gender_pivot <- pivot_wider(gender
,id_cols = country
,names_from = GENDER_EQUALITY
,values_from = weighted_n)
#pivot wider the survey responses
lgbtqi <- file8 %>%
select(country, HOMOSEXUALITY, weighted_n)
lgbtqi_pivot <- pivot_wider(lgbtqi
,id_cols = country
,names_from = HOMOSEXUALITY
,values_from = weighted_n)
#pivot wider the survey responses
religion <- file9 %>%
select(country, RELIGION_IMPORT, weighted_n)
religion_pivot <- pivot_wider(religion
,id_cols = country
,names_from = RELIGION_IMPORT
,values_from = weighted_n)
#survey questions joined
survey_joined <- left_join(gender_pivot, lgbtqi_pivot, by= "country")
survey_joined <- left_join(survey_joined, religion_pivot, by= "country")
#convert country names to match for join
clean_country <- data.frame(lapply(survey_joined, function(x) {
gsub("United States", "United States of America", x)
}))
clean_country <- data.frame(lapply(Country_Data, function(x) {
gsub("United States", "United States of America", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Slovak Replublic", "Slovakia", x)
}))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, clean_country, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, survey_joined, by= c("production_countries.name" = "country"))
View(tmdbjoined)
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
#convert country names to match for join
clean_survey <- data.frame(lapply(survey_joined, function(x) {
gsub("United States", "United States of America", x)
}))
clean_country <- data.frame(lapply(Country_Data, function(x) {
gsub("United States", "United States of America", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Slovak Replublic", "Slovakia", x)
}))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, clean_country, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, survey_joined, by= c("production_countries.name" = "country"))
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
#filter for last 10 years
tenyears <- combined %>%
filter(year > 2010)
#select relevant data
tmdb <- tenyears %>%
select(production_countries.name, original_language, budget, genres.name)
#import the tmdb files
file1 <- read.csv('tmdb clean 1-126118 range.csv')
file2 <- read.csv('tmdb clean 126119-199999 range.csv')
file3 <- read.csv('tmdb clean 200000-299999 range.csv')
file4 <- read.csv('tmdb clean 300000-371114 range.csv')
file5 <- read.csv('tmdb clean 371114-399999 range.csv')
file6 <- read.csv('tmdb clean 400000-499999 range.csv')
#merge files
combined <- rbind2(file1, file2)
combined <- rbind2(combined, file3)
combined <- rbind2(combined, file4)
combined <- rbind2(combined, file5)
combined <- rbind2(combined, file6)
#Code to get countries data
Country_Data <- select(wb_countries(),iso3c, country, income_level)
#create dummy variable for year of release
combined$release_date <- lubridate::dmy(combined$release_date)
combined$release_date[combined$release_date == ""] <- NA
combined$year <- year(combined$release_date)
#filter for last 10 years
tenyears <- combined %>%
filter(year > 2010)
#select relevant data
tmdb <- tenyears %>%
select(production_countries.name, original_language, budget, genres.name)
#drop NA values
tmdb <- na.omit(tmdb)
#survey questions joined
survey_joined <- left_join(gender_pivot, lgbtqi_pivot, by= "country")
survey_joined <- left_join(survey_joined, religion_pivot, by= "country")
#convert country names to match for join
survey_joined <- data.frame(lapply(survey_joined, function(x) {
gsub("United States", "United States of America", x)
}))
clean_country <- data.frame(lapply(Country_Data, function(x) {
gsub("United States", "United States of America", x)
}))
clean_country <- data.frame(lapply(clean_country, function(x) {
gsub("Slovak Replublic", "Slovakia", x)
}))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, clean_country, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, survey_joined, by= c("production_countries.name" = "country"))
View(tmdbjoined)
View(religion_pivot)
View(file1)
View(survey_joined)
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, clean_country, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- inner_join(tmdb, survey_joined, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, clean_country, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- inner_join(tmdb, survey_joined, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- left_join(tmdb, clean_country, by= c("production_countries.name" = "country"))
#join country_data with tmdb
tmdbjoined <- inner_join(tmdbjoined, survey_joined, by= c("production_countries.name" = "country"))
